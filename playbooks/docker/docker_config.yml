---
- name: Configure Docker Swarm
  hosts: docker
  become: true

  tasks:
    - name: Start and Enable Docker
      systemd:
        name: docker
        enabled: yes
        state: started
      become: true

    - name: Check if daemon.json exists
      stat:
        path: /etc/docker/daemon.json
      register: daemon_json_check

    - name: Create daemon.json file if not exists
      copy:
        content: |
          {
            "live-restore": false
          }
        dest: /etc/docker/daemon.json
      when: not daemon_json_check.stat.exists

    - name: Initialize Docker Swarm
      shell: docker swarm init --advertise-addr 192.168.161.38
      args:
        executable: /bin/bash
      register: swarm_init
      changed_when: "'Swarm initialized' in swarm_init.stdout"
      ignore_errors: true

    - name: Get Join Token
      shell: docker swarm join-token -q worker
      args:
        executable: /bin/bash
      register: join_token

    #- name: Disable SELinux temporarily (until next reboot)
     # selinux:
      #  policy: targeted
       # state: disabled

    #- name: Set SELinux state to permissive in the current session
     # command: setenforce 0
      #ignore_errors: yes

    #- name: Stop firewalld service
     # service:
      #  name: firewalld
       # state: stopped

   # - name: Disable firewalld service at boot
    #  systemd:
     #   name: firewalld
      #  enabled: no

- name: Join Worker Nodes
  hosts: dworkers
  become: true
  tasks:
    # - name: Get Join Token
   #    shell: docker swarm join-token worker -q
  #     args:
  #       executable: /bin/bash
  #     register: join_token


  - name: Join Worker Nodes to the Docker Swarm 
    shell: docker swarm join --token SWMTKN-1-4cpzfh90vwjqmpg1h0vebflciq5r055fw260mdk9aj0h4buk8l-4k1jz1h3lffgypp60hvva080m 192.168.161.38:2377
    args:
      executable: /bin/bash
    changed_when: false  # Joining a node doesn't change state, so we mark it as unchanged

  - name: Disable SELinux temporarily (until next reboot)
    selinux:
      policy: targeted
      state: disabled

  - name: Set SELinux state to permissive in the current session
    command: setenforce 0
    ignore_errors: yes

  - name: Stop firewalld service
    service:
      name: firewalld
      state: stopped

  - name: Disable firewalld service at boot
    systemd:
      name: firewalld
      enabled: no
